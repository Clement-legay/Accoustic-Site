{"remainingRequest":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\LEGAY\\Desktop\\accoustic\\src\\views\\Quiz.vue?vue&type=style&index=0&id=6131a30f&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\src\\views\\Quiz.vue","mtime":1635792710147},{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\LEGAY\\Desktop\\accoustic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2hvbGRpbmcKewogIHBhZGRpbmctbGVmdDogMTUlOwp9Cg=="},{"version":3,"sources":["Quiz.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA","file":"Quiz.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"Quiz\">\n    <HeaderComponentShort :theme=\"'SONO'\"></HeaderComponentShort>\n        <v-container>\n          <v-row>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-sheet class=\"pa-6\">\n                <h6>C'EST L'HEURE DE JOUER</h6>\n                <p class=\"font-x1 text-justify\">\n                  Appuyez sur le bouton play pour Ã©couter l'accord. En suite, choisissez quel note correspond au son, selon vous.<br/>\n                  N'aillez pas peur plus vous pratiquer et plus vous accoutumer votre oreil musicale !\n                </p>\n              </v-sheet>\n            </v-col>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-container cols=\"12\">\n                <v-select\n                    v-model=\"choice\"\n                    item-text=\"name\"\n                    :items=\"accords\"\n                    menu-props=\"auto\"\n                    label=\"Select Gamme\"\n                    return-object\n                    @change=\"next(); score = 0\"\n                ></v-select>\n                <v-skeleton-loader class=\"mx-auto\" type=\"card\" v-show=\"!loaded\"></v-skeleton-loader>\n                <v-card elevation=\"2\" outlined shaped v-show=\"loaded\" color=\"grey lighten-3\">\n                  <v-row>\n                    <v-spacer></v-spacer>\n                    <v-col sm=\"4\">\n                      <accords class=\"pa-2 center\" :notes=\"theOne\"></accords>\n                    </v-col>\n                    <v-col sm=\"4\">\n                      <h6 class=\"text-right pa-md-2\">Score: {{ score }}</h6>\n                    </v-col>\n                  </v-row>\n                  <br>\n                  <br>\n                  <v-row>\n                    <v-col sm=\"4\" v-for=\"(answer, index) in answers\" :key=\"index\" class=\"pa-6 center\">\n                      <v-btn color=\"green lighten-2\" elevation=\"2\" class=\"font-weight-black\" v-on:click=\"checkIf(index)\">{{answer.name}}</v-btn>\n                    </v-col>\n                  </v-row>\n                </v-card>\n              </v-container>\n            </v-col>\n          </v-row>\n        </v-container>\n\n    <FooterComponent></FooterComponent>\n  </div>\n</template>\n\n<script>\nimport HeaderComponentShort from \"../components/HeaderComponentShort\";\nimport FooterComponent from \"../components/FooterComponent\";\nimport Accords from \"../assets/js/Accords\";\nimport accords from \"/src/components/Accord\"\n\nexport default {\n  name: 'Quiz',\n  components: {\n    HeaderComponentShort,\n    FooterComponent,\n    accords\n  },\n  data() {\n    return {\n      choice: Accords.data().Accords[0],\n      accords: Accords.data().Accords,\n      theOne: Audio,\n      answers: Array,\n      Finally: false,\n      loaded: false,\n      score: 0\n    }\n  },\n  methods: {\n    next() {\n      this.theOne = this.rand(this.choice.data)\n      this.answers = [this.rand(this.choice.data), this.theOne, this.rand(this.choice.data)]\n      this.answers = this.shuffle(this.answers)\n      this.Finally = false\n    },\n    rand(accord) {\n      return accord[Math.floor(Math.random() * accord.length)]\n    },\n    checkIf(index) {\n      if (this.Finally !== true) {\n        if (this.answers[index].name === this.theOne.name) {\n          this.Finally = true\n          this.score++\n          this.next()\n        }\n        else {\n          this.Finally = false\n          this.score--\n        }\n      }\n    },\n    shuffle(a) {\n      let j, x, i;\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n      return a;\n    }\n  },\n  mounted() {\n    this.theOne = this.rand(this.choice.data)\n    this.answers = [this.rand(this.choice.data), this.theOne, this.rand(this.choice.data)]\n    this.answers = this.shuffle(this.answers)\n    setTimeout(() => {\n      this.loaded = true\n    }, (2500))\n  }\n}\n</script>\n\n<style scoped>\n#holding\n{\n  padding-left: 15%;\n}\n</style>"]}]}